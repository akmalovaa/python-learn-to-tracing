services:
  python_app1:
    # image: python:3.12.7-slim-bookworm
    container_name: app1
    build: .
    ports:
      - 8000:8000
    # command: ["tail", "-f", "/dev/null"]

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:0.112.0
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      # - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889  # Prometheus exporter metrics
      - 13133:13133 # health_check extension
    volumes:
      - ./configs/otel/config.yaml:/etc/otelcol/config.yaml

  grafana:
    image: grafana/grafana:10.4.11
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_USERS_DEFAULT_THEME: "dark"
    volumes:
      - ./configs/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
    depends_on:
      - tempo

  tempo:
    image: grafana/tempo:2.6.1
    container_name: tempo
    command: ["-config.file=/etc/tempo-local.yaml"]
    ports:
      - 3200:3200   # tempo http
      - 9095:9095   # tempo grpc
      - 14268:14268 # jaeger ingest
      # - 4318:4318   # otlp http
      - 4319:4317   # otlp grpc
    volumes:
      - ./configs/tempo/tempo-local.yaml:/etc/tempo-local.yaml

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    ports:
      - 9090:9090
    volumes:
      - ./configs/prometheus/prometheus.yaml:/etc/prometheus.yaml

  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   restart: always

  # postgres:
  #   image: postgres
  #   volumes:
  #     - postgres-data:/var/lib/postgresql
  #     - postgres-data:/etc/postgresql
  #     - postgres-data:/var/log/postgresql
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     POSTGRES_PASSWORD: password

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   hostname: zookeeper
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   volumes:
  #     - ./zoo/data:/var/lib/zookeeper/data
  #     - ./zoo/log:/var/lib/zookeeper/log

  # kafka:
  #   image: confluentinc/cp-enterprise-kafka:latest
  #   hostname: kafka
  #   container_name: kafka
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_DELETE_TOPIC_ENABLE: "true"
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #   volumes:
  #     - ./broker/data:/var/lib/kafka/data